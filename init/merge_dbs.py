import os
import pandas as pd
from config import VibesterConfig


def merge_dbs(df1_path: str, df2_path: str, target_path: str) -> None:
    """
    Merges two databases and outputs the result
    """
    for path in [df1_path, df2_path, target_path]:
        assert path.endswith(".parquet"), f"Path must end with .parquet, got {path}"

    for path in [df1_path, df2_path]:
        assert os.path.exists(path), f"File {path} does not exist"

    # Read dataframes
    df1 = pd.read_parquet(df1_path)
    df2 = pd.read_parquet(df2_path)

    # Concatenate dataframes along index
    merged_df = pd.concat([df1, df2], ignore_index=True)

    # Check if the DataFrames were really generated by Vibester
    for colname in VibesterConfig.generate_table_cols:
        assert colname in merged_df.columns, f"Column {colname} must be present in {merged_df.columns}"

    # Drop duplicates based on the "filename" column
    merged_df = merged_df.drop_duplicates(subset=["filename", "artist", "title", "year", "hash"], keep="first")

    # Save the merged dataframe to the target path
    merged_df.to_parquet(target_path)


if __name__ == "__main__":
    path1 = ""
    path2 = ""
    path_target = ""
    merge_dbs(df1_path=path1, df2_path=path2, target_path=path_target)
